name: 'security-netlify-trivy'
description: 'python wrapped trivy adding features like suppression handling'
inputs:
  suppression_file_path:  # id of input
    description: 'path/name of suppression list file'
    required: false
    default: 'suppressions-trivy'

#outputs:
#  random-number:
#    description: "Random number"
#    value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: "composite"
  steps:
    - run: echo Hello ${{ inputs.who-to-greet }}.
      shell: bash
 


    - id: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f .github/workflows/trivy-files/trivy-requirements.txt ]; then pip install -r .github/workflows/trivy-files/trivy-requirements.txt; fi

#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      #- name: Test with pytest
        #run: |
          #pytest

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Login to GCR
#        run: docker login -u oauth2accesstoken -p "${{ secrets.GC_API_CREDS}}" https://gcr.io
        run: docker login -u oauth2accesstoken -p "$(gcloud auth print-access-token)" https://gcr.io

      - name: Build image
        run: docker build -t trivy-ci-test:latest .

      - name: Get Trivy
        run: curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b ~

      - name: Trivy Container Scan
        run: /home/runner/trivy image -f json -o trivy_report.json trivy-ci-test:latest

#      - name: Trivy Print Report for Testing
#        run: echo $GITHUB_REPO && cat trivy_report.json
#        env:
#          GITHUB_REPO: ${{ github.repository}}

      - name: Trivy Parse Report
        run: |
          # specify --github=true/false and/or --slack=true/false
          # and specify severity of alerts to each like --minSeverityGithub=h and --minSeveritySlack=c
          python .github/workflows/trivy-files/trivy_json_report_parse.py --github=true --slack=false --minSeverityGithub=h
        env:
#          CONTAINER_SCAN_SLACK_WEBHOOK: ${{ secrets.CONTAINER_SCAN_SLACK_WEBHOOK }}
          CONTAINER_SCAN_GH_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository}}




    - id: random-number-generator
      run: echo "::set-output name=random-id::$(echo $RANDOM)"
      shell: bash
    - run: ${{ github.action_path }}/goodbye.sh
      shell: bash
